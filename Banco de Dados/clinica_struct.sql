-- Gerado por Oracle SQL Developer Data Modeler 4.1.5.907
--   em:        2017-03-22 11:08:15 BRT
--   site:      Oracle Database 11g
--   tipo:      Oracle Database 11g


DROP TABLE IF EXISTS CONSULTA ;
DROP TABLE IF EXISTS ALERGIA_ANIMAL ;
DROP TABLE IF EXISTS VACINA_ANIMAL ;
DROP TABLE IF EXISTS ANIMAL ;
DROP TABLE IF EXISTS ALERGIA ;
DROP TABLE IF EXISTS ENDERECO ;
DROP TABLE IF EXISTS DONO ;
DROP TABLE IF EXISTS FUNCIONARIO ;
DROP TABLE IF EXISTS ESPECIE ;
DROP TABLE IF EXISTS TIPO_ANIMAL ;
DROP TABLE IF EXISTS TIPO_FUNCIONARIO ;
DROP TABLE IF EXISTS VACINA ;

CREATE TABLE ALERGIA
  (
    ID          BIGINT IDENTITY NOT NULL ,
    NOMEALERGIA VARCHAR (50) NOT NULL ,
    DESCRICAO   VARCHAR (255),
    constraint ALERGIA_PK primary key (ID)
  ) ;

CREATE TABLE ALERGIA_ANIMAL
  (
    ANIMAL_ID  BIGINT IDENTITY NOT NULL ,
    ALERGIA_ID BIGINT NOT NULL ,
    constraint ALERGIA_ANIMAL_PK primary key (ANIMAL_ID, ALERGIA_ID)
  ) ;

CREATE TABLE ANIMAL
  (
    ID             BIGINT IDENTITY NOT NULL ,
    NOME           VARCHAR (50) NOT NULL ,
    NASCIMENTO     DATE ,
    DONO_ID        BIGINT NOT NULL ,
    ESPECIE_ID BIGINT NOT NULL ,
    constraint ANIMAL_PK primary key (ID)
  ) ;

CREATE TABLE CONSULTA
  (
    ANIMAL_ID            BIGINT NOT NULL ,
    DATAHORA_CONSULTA    TIMESTAMP NOT NULL ,
    FUNCIONARIO_AGEND_ID BIGINT NOT NULL ,
    VETERINARIO_ID       BIGINT NOT NULL ,
    constraint CONSULTA_PK primary key (ANIMAL_ID, DATAHORA_CONSULTA)
  ) ;

CREATE TABLE DONO
  (
    ID         BIGINT IDENTITY NOT NULL ,
    CPF        BIGINT NOT NULL ,
    NOME       VARCHAR (50) NOT NULL ,
    NASCIMENTO DATE ,
    constraint PESSOA_PK primary key (ID)
  ) ;

CREATE TABLE ENDERECO
  (
    DONO_ID    BIGINT NOT NULL ,
    LOGRADOURO VARCHAR (100) NOT NULL ,
    BAIRRO     VARCHAR (50) NOT NULL ,
    NUMERO     BIGINT ,
    CIDADE     VARCHAR (50) NOT NULL ,
    CEP        BIGINT ,
    constraint ENDERECO_PK primary key (DONO_ID)
  ) ;

CREATE TABLE FUNCIONARIO
  (
    ID                          BIGINT IDENTITY NOT NULL ,
    NOME                        VARCHAR (50) NOT NULL ,
    CPF                         BIGINT NOT NULL ,
    SENHA                       VARCHAR(43) NOT NULL ,
    NASCIMENTO                  DATE NOT NULL ,
    DATAADMISSAO                DATE NOT NULL ,
    TIPO_FUNCIONARIO_CODIGOTIPO CHAR (3) NOT NULL ,
    constraint FUNCIONARIO_PK primary key (ID)
  ) ;

CREATE TABLE TIPO_ANIMAL
  (
    ACRONIMO  CHAR (3) NOT NULL ,
    NOME      VARCHAR (100) NOT NULL ,
    DESCRICAO VARCHAR (255),
    CONSTRAINT TIPO_ANIMAL_PK PRIMARY KEY (ACRONIMO)
  ) ;

  CREATE TABLE ESPECIE
  (
    ID                   BIGINT IDENTITY NOT NULL ,
    NOME                 VARCHAR (50) NOT NULL ,
    DESCRICAO            VARCHAR (100) ,
    TIPO_ANIMAL_ACRONIMO CHAR (3) NOT NULL,
    CONSTRAINT ESPECIE_PK PRIMARY KEY (ID)
  ) ;

CREATE TABLE TIPO_FUNCIONARIO
  (
    CODIGOTIPO CHAR (3) NOT NULL ,
    DESCRICAO  VARCHAR (50) NOT NULL ,
    constraint TIPO_FUNCIONARIO_PK primary key (CODIGOTIPO)
  ) ;

CREATE TABLE VACINA
  (
    ID        BIGINT IDENTITY NOT NULL ,
    NOME      VARCHAR (50) NOT NULL ,
    DESCRICAO VARCHAR (255) ,
    constraint VACINA_PK primary key (ID)
  ) ;

CREATE TABLE VACINA_ANIMAL
  (
    ANIMAL_ID            BIGINT NOT NULL ,
    VACINA_ID            BIGINT NOT NULL ,
    DATAVACINACAO        DATE NOT NULL ,
    DESCRICAOVETERINARIO VARCHAR (255) ,
    constraint VACINA_ANIMAL_PK primary key (ANIMAL_ID, VACINA_ID, DATAVACINACAO)
  ) ;

-- RODAR SOMENTE DEPOIS DE CRIAR AS TABELAS

ALTER TABLE TIPO_ANIMAL ADD CONSTRAINT TIPO_ANIMAL_UN UNIQUE ( NOME ) ;

ALTER TABLE FUNCIONARIO ADD CONSTRAINT FUNCIONARIO_CPF_UN UNIQUE ( CPF ) ;

ALTER TABLE DONO ADD CONSTRAINT PESSOA_CPF_UN UNIQUE ( CPF ) ;

ALTER TABLE ALERGIA_ANIMAL ADD CONSTRAINT ALERGIA_ANIMAL_ALERGIA_FK FOREIGN KEY ( ALERGIA_ID ) REFERENCES ALERGIA ( ID ) ;

ALTER TABLE ALERGIA_ANIMAL ADD CONSTRAINT ALERGIA_ANIMAL_ANIMAL_FK FOREIGN KEY ( ANIMAL_ID ) REFERENCES ANIMAL ( ID ) ;

ALTER TABLE ANIMAL ADD CONSTRAINT ANIMAL_PESSOA_FK FOREIGN KEY ( DONO_ID ) REFERENCES DONO ( ID ) ;

ALTER TABLE ANIMAL ADD CONSTRAINT ANIMAL_ESPECIE_FK FOREIGN KEY ( ESPECIE_ID ) REFERENCES ESPECIE ( ID ) ;

ALTER TABLE CONSULTA ADD CONSTRAINT CONSULTA_ANIMAL_FK FOREIGN KEY ( ANIMAL_ID ) REFERENCES ANIMAL ( ID ) ;

ALTER TABLE CONSULTA ADD CONSTRAINT CONSULTA_FUNCIONARIO_FKAGEN FOREIGN KEY ( FUNCIONARIO_AGEND_ID ) REFERENCES FUNCIONARIO ( ID ) ;

ALTER TABLE CONSULTA ADD CONSTRAINT CONSULTA_FUNCIONARIO_FKVET FOREIGN KEY ( VETERINARIO_ID ) REFERENCES FUNCIONARIO ( ID ) ;

ALTER TABLE ENDERECO ADD CONSTRAINT ENDERECO_PESSOA_FK FOREIGN KEY ( DONO_ID ) REFERENCES DONO ( ID ) ;

ALTER TABLE FUNCIONARIO ADD CONSTRAINT FUNCTIPO_FUNC_FK FOREIGN KEY ( TIPO_FUNCIONARIO_CODIGOTIPO ) REFERENCES TIPO_FUNCIONARIO ( CODIGOTIPO ) ;

ALTER TABLE VACINA_ANIMAL ADD CONSTRAINT VACINA_ANIMAL_ANIMAL_FK FOREIGN KEY ( ANIMAL_ID ) REFERENCES ANIMAL ( ID ) ;

ALTER TABLE VACINA_ANIMAL ADD CONSTRAINT VACINA_ANIMAL_VACINA_FK FOREIGN KEY ( VACINA_ID ) REFERENCES VACINA ( ID ) ;

ALTER TABLE ESPECIE ADD CONSTRAINT ESPECIE_TIPO_ANIMAL_FK FOREIGN KEY ( TIPO_ANIMAL_ACRONIMO ) REFERENCES TIPO_ANIMAL ( ACRONIMO ) ;

ALTER TABLE CONSULTA ADD CONSTRAINT CONSULTA_VETHORA_UN UNIQUE ( VETERINARIO_ID , DATAHORA_CONSULTA ) ;

--TRIGGERS

CREATE TRIGGER CONSULTA_TR_I BEFORE INSERT ON CONSULTA
REFERENCING NEW AS NEWROW 
FOR EACH ROW
BEGIN ATOMIC
 IF NOT EXISTS (SELECT * FROM FUNCIONARIO WHERE FUNCIONARIO.ID = NEWROW.VETERINARIO_ID AND FUNCIONARIO.TIPO_FUNCIONARIO_CODIGOTIPO = 'VET') THEN
   SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A consulta deve ser agendada para um funciońário do tipo veterínário.';
 END IF;
END

CREATE TRIGGER CONSULTA_TR_U BEFORE UPDATE ON CONSULTA
REFERENCING NEW AS NEWROW 
FOR EACH ROW
BEGIN ATOMIC
 IF NOT EXISTS (SELECT * FROM FUNCIONARIO WHERE FUNCIONARIO.ID = NEWROW.VETERINARIO_ID AND FUNCIONARIO.TIPO_FUNCIONARIO_CODIGOTIPO = 'VET') THEN
   SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A consulta deve ser agendada para um funciońário do tipo veterínário.';
 END IF;
END